pr:
  autoCancel: true

stages:
- stage: lint
  jobs:
    - job: Linux
      timeoutInMinutes: 0
      pool:
        vmImage: 'Ubuntu-latest'
      container: python:3.8
      steps:
      - bash: |
          echo "##vso[task.prependpath]$HOME/.local/bin"
          hash -r
        displayName: Add .local/bin to PATH
      - bash:
          python -m pip install --user --upgrade flake8
        displayName: install flake8
      - script:
          flake8 . --exclude=.venv,.build,build --ignore=E501,F403,E402,F999,F405,E712,W503
        displayName: linting
- stage: test
  dependsOn: [lint]
  condition: succeeded()
  jobs:
    - job: Linux
      timeoutInMinutes: 0
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        matrix:
          Python38LowMatplotlib:
            python.version: '3.8'
            matplotlib.version: '3.1.1'
          Python38HighMatplotlib:
            python.version: '3.8'
            matplotlib.version: '3.6.0'
          Python39HighMatplotlib:
            python.version: '3.9'
            matplotlib.version: '3.7.3'
          Python310HighMatplotlib:
            python.version: '3.10'
            matplotlib.version: '3.8.4'

      steps:
      - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
          hash -r
        displayName: Add conda to PATH
      - bash: |
          conda config --set always_yes yes --set changeps1 no
          conda info -a
          cat requirements_CI.txt | awk -v v=$(matplotlib.version) -v vp=$(python.version) 'BEGIN{print "python =="vp}{if($0~/matplotlib/){$0="matplotlib =="v}; print}' > requirements_CI_updated.txt
          conda create -n pygenometracks --yes -c conda-forge -c bioconda --file requirements_CI_updated.txt
          source activate pygenometracks
          python -m pip install .
        displayName: installing dependencies
      - script: |
          source activate pygenometracks
          py.test pygenometracks --doctest-modules -n 4
        displayName: pytest

    - job: OSX
      timeoutInMinutes: 0
      pool:
        vmImage: 'macOS-11'
      strategy:
        matrix:
          Python38LowMatplotlib:
            python.version: '3.8'
            matplotlib.version: '3.1.1'
          Python38HighMatplotlib:
            python.version: '3.8'
            matplotlib.version: '3.5.1'
          Python39HighMatplotlib:
            python.version: '3.9'
            matplotlib.version: '3.5.1'

      steps:
      - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
          hash -r
        displayName: Add conda to PATH
      # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
      # We need to take ownership if we want to update conda or install packages globally
      - bash: sudo chown -R $USER $CONDA
        displayName: Take ownership of conda installation
      - bash: |
          conda config --set always_yes yes --set changeps1 no
          conda info -a
          cat requirements_CI.txt | awk -v v=$(matplotlib.version) -v vp=$(python.version) 'BEGIN{print "python =="vp}{if($0~/matplotlib/){$0="matplotlib =="v}; print}' > requirements_CI_updated.txt
          conda create -n pygenometracks --yes -c conda-forge -c bioconda --file requirements_CI_updated.txt
          source activate pygenometracks
          python -m pip install .
        displayName: installing dependencies
      - script: |
          source activate pygenometracks
          py.test pygenometracks --doctest-modules -n 4
        displayName: pytest

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - stage: Deploy
    dependsOn: [test]
    condition: succeeded()
    jobs:
    - job: pypi
      pool:
        vmImage: 'Ubuntu-latest'
      container: python:3.8
      steps:
      - script: |
          python -m pip install --upgrade pip
          pip install build
          python -m build
          python -m pip install --user --upgrade twine
          python -m twine upload -r pypi dist/*
        env:
          TWINE_USERNAME: lldelisle
          TWINE_PASSWORD: $(TWINE_LUCILLE_PASSWORD)
        displayName: 'Push to Python Package Index'
